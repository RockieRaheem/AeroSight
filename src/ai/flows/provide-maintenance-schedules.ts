// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates maintenance schedules based on predictive algorithms incorporating airline preferences.
 *
 * - provideMaintenanceSchedules - A function that generates maintenance schedules.
 * - ProvideMaintenanceSchedulesInput - The input type for the provideMaintenanceSchedules function.
 * - ProvideMaintenanceSchedulesOutput - The return type for the provideMaintenanceSchedules function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const MaintenanceTaskSchema = z.object({
  task: z.string().describe('The specific maintenance task to be performed.'),
  interval: z.string().describe('The recommended interval for the task (e.g., "Every 100 flight hours").'),
  reason: z.string().describe('The reason or justification for this maintenance task.'),
});

const ProvideMaintenanceSchedulesInputSchema = z.object({
  aircraftType: z.string().describe('The type of aircraft.'),
  airlinePreferences: z.string().describe('The airlineâ€™s specific maintenance preferences and priorities.'),
  incomingAircraftData: z.string().describe('The stream of incoming aircraft systems and sensor data.'),
});
export type ProvideMaintenanceSchedulesInput = z.infer<
  typeof ProvideMaintenanceSchedulesInputSchema
>;

const ProvideMaintenanceSchedulesOutputSchema = z.object({
  maintenanceSchedule: z.array(MaintenanceTaskSchema).describe('A list of generated maintenance tasks.'),
});
export type ProvideMaintenanceSchedulesOutput = z.infer<
  typeof ProvideMaintenanceSchedulesOutputSchema
>;

export async function provideMaintenanceSchedules(
  input: ProvideMaintenanceSchedulesInput
): Promise<ProvideMaintenanceSchedulesOutput> {
  return provideMaintenanceSchedulesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'provideMaintenanceSchedulesPrompt',
  input: {schema: ProvideMaintenanceSchedulesInputSchema},
  output: {schema: ProvideMaintenanceSchedulesOutputSchema},
  prompt: `You are an expert aviation maintenance planner. Based on the aircraft type, its latest sensor data, and the airline's preferences, generate a detailed, predictive maintenance schedule.

For each maintenance task, provide the specific task, the recommended interval, and a clear reason for the recommendation.

Aircraft Type: {{{aircraftType}}}
Airline Preferences: {{{airlinePreferences}}}
Incoming Sensor Data: {{{incomingAircraftData}}}
`,
});

const provideMaintenanceSchedulesFlow = ai.defineFlow(
  {
    name: 'provideMaintenanceSchedulesFlow',
    inputSchema: ProvideMaintenanceSchedulesInputSchema,
    outputSchema: ProvideMaintenanceSchedulesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
